// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    //binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"] // Local Dev
    binaryTargets = ["native", "linux-arm64-openssl-1.1.x", "debian-openssl-1.1.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int    @id @default(autoincrement())
    name     String @unique
    email    String @unique
    password String

    @@map("users")
}

model Host {
    id           Int             @id @default(autoincrement())
    ip           String          @unique
    hostname     String?
    os           String?
    ports        Port[]
    vulnerabilities Vulnerability[]
    createdAt    DateTime        @default(now())
    updatedAt    DateTime        @updatedAt

    @@map("hosts")
}

model Port {
    id       Int    @id @default(autoincrement())
    number   Int
    protocol String
    state    String
    service  String?
    version  String?
    hostId   Int
    host     Host   @relation(fields: [hostId], references: [id], onDelete: Cascade)

    @@map("ports")
}

model Vulnerability {
    id          Int      @id @default(autoincrement())
    vid         String   // Vulnerability ID (e.g., CVE-2021-1234)
    title       String
    description String
    severity    String
    riskScore   Float?
    hostId      Int
    host        Host     @relation(fields: [hostId], references: [id], onDelete: Cascade)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@map("vulnerabilities")
}

model Scan {
    id        Int      @id @default(autoincrement())
    target    String
    status    String   // pending, running, completed, failed
    results   String?  // JSON string of scan results
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("scans")
}